// ⦁ Форматирование строки
// Напишите функцию, которая форматирует строку, заменяя специальные символы HTML на их эквиваленты.
// ⦁ Псевдонимы строк
// Напишите функцию, которая создает псевдоним для строки, заменяя
// пробелы и специальные символы подчеркиваниями.
// ⦁ Разбор строки
// Напишите функцию, которая разбирает строку, содержащую числа, и
//  2

// возвращает их сумму.
// ⦁ Обратный порядок слов
// Напишите функцию, которая принимает строку и возвращает строку с обратным порядком слов.
// ⦁ Подсчет уникальных слов
// Напишите функцию, которая подсчитывает количество уникальных слов
// в строке.
// ⦁ Поиск палиндромов
// Напишите функцию, которая проверяет, является ли строка палиндромом.
// ⦁ Перемешивание слов
// Напишите функцию, которая случайным образом перемешивает слова в
// строке.
// ⦁ Сортировка слов по длине
// Напишите функцию, которая сортирует слова в строке по их длине. ⦁ Генерация хеш-значения
// Напишите функцию, которая вычисляет хеш-значение строки с использованием алгоритма SHA-256.
// ⦁ Генерация всех подстрок
// Напишите функцию, которая генерирует все подстроки заданной
// строки.
// ⦁ Поиск всех анаграмм
// Напишите функцию, которая ищет все анаграммы строки в другой строке.
// ⦁ Подсчет слов и символов
// Напишите функцию, которая подсчитывает количество слов и символов в строке.

// -------------------------------------------------------------------------------------------------
// Задания для 11 – го урока ⦁ Конкатенация строк
// Напишите функцию, которая принимает две строки и возвращает их конкатенацию.
// package main

// import "fmt"

//	func main() {
//		a:="Hello, "
//		b:="World!"
//		result:= Concatenation(a,b)
//		fmt.Println(result)
//	}
//
//	func Concatenation(a,b string) string {
//		return a+b
//	}
//
// -------------------------------------------------------------------------------------------------
// ⦁ Длина строки
// Напишите функцию, которая принимает строку и возвращает её длину.
// package main

// import "fmt"

//	func main() {
//		str:="Hello, World!"
//		result:=strLen(str)
//		fmt.Println(result)
//	}
//
//	func strLen(str string) int {
//		return len(str)
//	}
//
// -------------------------------------------------------------------------------------------------
// ⦁ Проверка подстроки
// Напишите функцию, которая проверяет, содержит ли строка заданную
// подстроку.
// package main

// import (
// 	"fmt"
// 	"strings"
// )

// func main() {
// 	str:="Hello, World!"
// 	result:=strings.Contains(str,"Hello") //true
// 	fmt.Println(result)

//		result2:=strings.Contains(str,"Jomi") //false
//		fmt.Println(result2)
//	}
//
// -------------------------------------------------------------------------------------------------
// ⦁ Поиск подстроки
// Напишите функцию, которая находит индекс первого вхождения подстроки в строке. Верните -1, если подстрока не найдена.
// package main

// import (
// 	"fmt"
// 	"strings"
// )

//	func main() {
//		str:="Hello, World"
//		index:=strings.Index(str,"d")
//		fmt.Println(index)
//	}
//
// -------------------------------------------------------------------------------------------------
// ⦁ Замена подстроки
// Напишите функцию, которая заменяет все вхождения подстроки в
// строке на другую подстроку.
// package main

// import (
// 	"fmt"
// 	"strings"
// )

//	func main() {
//		str:="A dflkjdsflsd A lkfjsdfdslkf Adflkdjfds A lkjfdsf A ldflkds "
//		str=strings.ReplaceAll(str,"A","B")
//		fmt.Println(str)
//	}
//
// -------------------------------------------------------------------------------------------------
// Удаление пробелов
// Напишите функцию, которая удаляет пробелы в начале и в конце строки.
// package main

// import (
// 	"fmt"
// 	"strings"
// )

//	func main() {
//		fmt.Println(a(" Hello World "))
//	}
//
//	func a(s string) string {
//		return strings.Trim(s, " ")
//	}
//
// -------------------------------------------------------------------------------------------------
// ⦁ Преобразование регистра
// Напишите функцию, которая преобразует строку к верхнему и нижнему
// регистру.
// package main

// import (
// 	"fmt"
// 	"strings"
// )

// func main() {
// 	fmt.Println(ToUpper("hello world"))
// 	fmt.Println(ToLower("HELLO WORLD"))

// }
// func ToUpper(s string) string {
// 	return strings.ToUpper(s)
// }

//	func ToLower(s string) string {
//		return strings.ToLower(s)
//	}
//
// -------------------------------------------------------------------------------------------------
// Повторение строки
// Напишите функцию, которая повторяет строку заданное количество раз.
// package main

// import (
// 	"fmt"
// 	"strings"
// )

//	func main() {
//		s:="Go"
//		fmt.Println(Repeat(s))
//	}
//
//	func Repeat(s string)string  {
//		return strings.Repeat(s,3)
//	}
//
// -------------------------------------------------------------------------------------------------
// Разбиение строки
// Напишите функцию, которая разбивает строку по заданному разделителю и возвращает срез строк.
// package main

// import (
// 	"fmt"
// 	"strings"
// )

//	func main() {
//		s:="SalomqAleykumqBarodariqAziz"
//		fmt.Println(Split(s))
//	}
//
//	func Split(s string) []string {
//		return strings.Split(s,"q")
//	}
//
// -------------------------------------------------------------------------------------------------
// ⦁ Сравнение строк
// Напишите функцию, которая сравнивает две строки без учета регистра.
// package main

// import (
// 	"fmt"
// 	"strings"
// )

// func main() {
// 	s1 := "a"
// 	s2 := "A"
// 	fmt.Println(bigOne(s1, s2))

// }
//
//	func bigOne(s1, s2 string) bool {
//		return strings.EqualFold(s1,s2)
//	}
//
// -------------------------------------------------------------------------------------------------
// ⦁ Поиск и замена первой подстроки
// Напишите функцию, которая заменяет первое вхождение подстроки в строке на другую подстроку.
// package main

// import (
// 	"fmt"
// 	"strings"
// )

//	func main() {
//		s:="Hello brather Hello sister Hello mother "
//		fmt.Println(a(s))
//	}
//
//	func a(s string) string {
//		return strings.Replace(s,"Hello","Hi",1)
//	}
//
// -------------------------------------------------------------------------------------------------
// ⦁ Инверсия строки
// Напишите функцию, которая переворачивает строку.
// package main

// import (
// 	"fmt"
// )

// func main() {
// 	s := "kamola"
// 	inversion(s)

// }

//	func inversion(s string)  {
//		bytes := []byte(s)
//		inver:=make([]byte,len(bytes))
//		n:=len(bytes)
//		for i, v := range bytes {
//			inver[n-1-i]=v
//		}
//		fmt.Println(string(inver))
//	}
//
// -------------------------------------------------------------------------------------------------
// ⦁ Подсчет символов
// Напишите функцию, которая подсчитывает количество каждого символа
// в строке и возвращает карту с результатами.

// package main

// import (
// 	"fmt"
// )

// func main() {
// 	s := "nekruz"
// 	countRune(s)

// }

// func countRune(s string) {
// 	count := make(map[rune]int)
// 	for _, v := range s {
// 		count[v]++
// 	}

// 	for key, v := range count {
// 		fmt.Printf("%v=%d\n", string(key), v)
// 	}

// }
// -------------------------------------------------------------------------------------------------
// ⦁ Удаление символов
// Напишите функцию, которая удаляет все вхождения заданного символа из строки.
// package main

// import (
// 	"fmt"
// 	"strings"
// )

// func main() {
// 	s1 := "AAAAB"
// 	s2 := "A"
// 	fmt.Println(bigOne(s1, s2))

// }

//	func bigOne(s1, s2 string) string {
//		return strings.ReplaceAll(s1, s2, "")
//	}
//
// -------------------------------------------------------------------------------------------------
// ⦁ Подсчет слов
// Напишите функцию, которая подсчитывает количество слов в строке.
// Словом считается последовательность символов, разделенная пробелами.
// package main

// import (
// 	"fmt"
// 	"strings"
// )

// func main() {
// 	s := "nekruz nekruz nekruz nekruz"
// 	fmt.Println(countString(s))
// }

//	func countString(s string) int {
//		return strings.Count(s, "nekruz")
//	}
//
// -------------------------------------------------------------------------------------------------
// ⦁ Проверка префикса и суффикса
// Напишите функции, которые проверяют, начинается ли строка с
// заданного префикса и заканчивается ли строка заданным суффиксом.
// package main

// import (
// 	"fmt"
// 	"strings"
// )

// func main() {
// 	s := "perfix nekruz nekruz sufix"
// 	perfix := "perfix"
// 	suffix := "sufix"
// 	fmt.Println(countString(s, perfix, suffix))
// }

// func countString(s, perfix, suffix string) bool {
// 	return strings.HasPrefix(s, perfix) && strings.HasSuffix(s, suffix)

// }
// -------------------------------------------------------------------------------------------------
//
//	⦁ Удаление дубликатов символов
//
// Напишите функцию, которая удаляет дубликаты символов в строке.
package main

import "fmt"

func main() {
	a("aabbccddeeff")
}
func a(s string)  {
	m:=make(map[rune]int)
	for _, value := range s {
		m[value]++
	}
	newString:=[]rune{}
	for _, v := range s {
		if m[v]==1{
			newString = append(newString,v)
		}
	}
	fmt.Println(newString)
}
