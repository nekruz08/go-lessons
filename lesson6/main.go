// Напишите программу для учета голосов на выборах. Реализуйте функции для подсчета голосов за каждого кандидата и определения победителя.

// Напишите программу для управления производственным процессом. Реализуйте функции для добавления нового рабочего места и увеличения числа рабочих мест.

// Напишите программу для учета баланса кредитной карты. Реализуйте функции для добавления средств и проверки текущего баланса.

// Напишите программу для учета расходов на семейный бюджет. Реализуйте функции для добавления новой записи расходов и вывода общей суммы расходов.

// Напишите программу для учета оценок по предметам студентов. Реализуйте функции для добавления оценки по предмету и вывода среднего балла.

// Advanced Level
// Напишите программу для конвертации суммы из долларов в евро по текущему курсу. Начальный курс равен 0.85 евро за доллар.
// Реализуйте функции для обновления курса валюты и конвертации суммы. Если конвертированная сумма превышает 5000 евро,
// выведите сообщение "Превышен лимит конвертации".

// Напишите программу для рассчета сложных процентов по вкладу. Начальная сумма вклада равна 100000 рублей.
// Реализуйте функции для добавления процентной ставки и расчета итоговой суммы через 3 года. Если итоговая сумма
// превышает 150000 рублей, выведите сообщение "Достигнут желаемый результат".

// Напишите программу для учета ежемесячных выплат по ипотеке. Начальная сумма кредита равна 5000000 рублей.
// Реализуйте функции для добавления ежемесячного платежа и проверки оставшейся суммы. Если оставшаяся сумма становится
// меньше 1000000 рублей, выведите сообщение "Оплачен половинный остаток кредита".

// Напишите программу для учета операций по кредитной карте. Начальный лимит операций равен 50.
// Реализуйте функции для добавления новой операции и вывода количества выполненных операций.
// Если количество операций превысит 100, выведите сообщение "Превышено допустимое количество операций".

// Напишите программу для учета комиссий за транзакции на банковском счете. Начальная сумма комиссий равна 0.
// Реализуйте функции для добавления комиссии и вывода общей суммы комиссий. Если общая сумма комиссий превысит 3000 рублей,
// выведите сообщение "Превышен лимит комиссий".

// Напишите программу для конвертации суммы из евро в доллары по текущему курсу. Начальный курс равен 1.2 доллара за евро.
// Реализуйте функции для применения скидки курса валюты и конвертации суммы. Если конвертированная сумма превышает 10000 долларов,
// выведите сообщение "Превышен лимит конвертации".

// Напишите программу для расчета среднего ежемесячного дохода. Начальная сумма дохода за год равна 1200000 рублей.
// Реализуйте функции для вычисления среднего дохода за месяц и вычета налогов в размере 13%. Если средний доход за месяц
// становится меньше 90000 рублей, выведите сообщение "Доход ниже уровня прожиточного минимума".

// Напишите программу для учета покупки и продажи акций. Начальная стоимость акции равна 1000 рублей.
// Реализуйте функции для добавления прибыли и проверки общей прибыли после продажи всех акций. Если общая прибыль
// становится отрицательной, выведите сообщение "Убыток".

// Напишите программу для учета ежедневных расходов. Начальный лимит расходов равен 2000 рублей в день.
// Реализуйте функции для добавления нового расхода и проверки общей суммы расходов за день.
// Если общая сумма расходов превышает 3000 рублей, выведите сообщение "Превышен лимит расходов за день".

// Напишите программу для учета доходов от инвестиций. Начальная сумма инвестиций равна 500000 рублей. Реализуйте
// функции для добавления прибыли и проверки общего дохода от инвестиций. Если общий доход становится меньше начальной
// суммы инвестиций, выведите сообщение "Убыток".

// -------------------------------------------------------------------------------------------------
// Напишите функцию updateValue,
// которая принимает указатель на целое число и увеличивает его значение на 10.
// package main

// import "fmt"

//	func main() {
//		n:=0
//		fmt.Println("before",n)
//		updateValue(&n)
//		fmt.Println("after ",n)
//	}
//
//	func updateValue(n *int)  {
//		*n=*n+10
//	}
//
// -------------------------------------------------------------------------------------------------
// Напишите функцию swap, которая меняет местами значения двух переменных с использованием указателей.
// package main

// import "fmt"

// 	func main() {
// 		a := 6
// 		b := 9
// 		swap(&a, &b)
// 		fmt.Print(a, b)
// 	}

// 	func swap(a, b *int) {
// 		*a,*b=*b,*a
// 	}
//
// -------------------------------------------------------------------------------------------------
// Напишите функцию printValue, которая
// принимает указатель на целое число и выводит его значение.
// Если указатель равен nil, выведите сообщение "Указатель пуст".
// package main

// import "fmt"

//	func main() {
//		a := 1
//		var b *int
//		printValue(&a)
//		printValue(b)
//	}
//
//	func printValue(a *int) {
//		if a == nil {
//			fmt.Println("Указатель пуст")
//		} else {
//			fmt.Println(*a)
//		}
//	}
//
// -------------------------------------------------------------------------------------------------
// Напишите функцию increment, которая принимает указатель на целое число и у
// величивает его значение на 1.
// package main

// import "fmt"

//	func main() {
//		a:=1
//		increment(&a)
//		fmt.Print(a)
//	}
//
//	func increment(a *int)  {
//		*a+=1
//	}
//
// -------------------------------------------------------------------------------------------------
// Напишите функцию isPositive, которая принимает указатель на целое число и
// возвращает true,
// если значение положительное, и
// false в противном случае.
// package main

// import "fmt"

// func main() {
// 	a:=1
// 	fmt.Println(isPositive(&a))
// }
// func isPositive(a *int) bool {
// 	return *a>0
// }

// -------------------------------------------------------------------------------------------------
// Напишите функцию changeString,
// которая принимает указатель на строку и добавляет к ней слово "Go".
// package main

// import "fmt"

// func main() {
// 	s:="Hello,"
// 	changeString(&s)
// 	fmt.Println()
// }

// func changeString(s *string)  {
// 	*s+="Go"
// }

// -------------------------------------------------------------------------------------------------
// Напишите программу для управления персональными данными.
// Реализуйте функции для хранения и вывода имени и возраста человека с использованием указателей.

// package main

// func main() {
// var name string
// var age int

// }

//	func nameAgeStore(s *string,i *int)  {
//		*s=
//	}
//
// -------------------------------------------------------------------------------------------------
// Напишите функцию double, которая принимает указатель на целое число и удваивает его значение.
// package main

// import "fmt"

//	func main() {
//		num:=2
//		double(&num)
//		fmt.Println(num)
//	}
//
//	func double(n *int)  {
//		*n=*n**n
//	}
//
// -------------------------------------------------------------------------------------------------
// Напишите функцию isEven, которая принимает указатель на целое число и возвращает true, если число четное, и false, если нечетное.
// package main

// import "fmt"

// func main() {
// 	n:=5
// 	fmt.Println(isEven(&n))

// }
// func isEven(n *int) bool {
// 	return *n%2==0
// }

// -------------------------------------------------------------------------------------------------
// Напишите функцию checkNil,
// которая принимает указатель на целое число и проверяет, является ли он нулевым (nil).
// package main

// import "fmt"

// func main() {
// 	var n *int
// 	fmt.Println(checkNil(n))

// 	m :=4
// 	var o *int = &m
// 	fmt.Println(checkNil(o))
// }

// func checkNil(n *int) bool {
// 	return n == nil
// }

// -------------------------------------------------------------------------------------------------
// Middle Level
// Напишите программу для управления персональными данными.
// Реализуйте функции для хранения и вывода имени и возраста человека с использованием указателей.
// package main

// import "fmt"

// func main() {
// 	name := new(string)
// 	age := new(int)

// 	dataStore(name,age,"Avrangzeb",41)
// 	printNameAge(name,age)

// }

//	func dataStore(str *string, num *int, name string, age int) {
//		*str = name
//		*num = age
//	}
//
//	func printNameAge(name *string,age *int)  {
//		fmt.Println(*name)
//		fmt.Println(*age)
//	}
//
// -------------------------------------------------------------------------------------------------
// Напишите программу для учета посещаемости студентов на курсе.
// Реализуйте функции для отметки студента
// как посетившего курс и вывода списка студентов с их статусом посещения.
// package main

// import "fmt"

// func main() {
// 	student1:="Odil"
// 	student1ptr:=new(bool)

// 	student2:="Zolim"
// 	student2ptr:=new(bool)

// 	markAttendance(student1,student1ptr)
// 	printAtendance(student1,student1ptr)

// 	printAtendance(student2,student2ptr)

// }
// func markAttendance(name string,attendance *bool) {
// 	*attendance=true
// }

// func printAtendance(name string,attendance *bool)  {
// 	if *attendance{
// 		fmt.Printf("%s посешал\n",name)
// 	}else{
// 		fmt.Printf("%s не посешал\n",name)
// 	}
// }
// -------------------------------------------------------------------------------------------------
// Напишите программу для учета результатов тестирования студентов.
// Реализуйте функции для добавления результатов теста и вывода среднего балла.
package main

func main() {
	
}

func averageScore()  {
	
}